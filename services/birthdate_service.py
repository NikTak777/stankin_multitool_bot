from datetime import datetime
from aiogram.types import ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
from utils.database import add_user_with_bd, get_user_info, update_is_approved
from utils.logger import write_user_log
from utils.date_utils import format_date

import pytz

tz_moscow = pytz.timezone("Europe/Moscow")

async def save_user_birthday(user_id: int, username: str, full_name: str, day: int, month: int, year: int, message):
    """
    –õ–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    add_user_with_bd(user_id, username, full_name, day, month, year)

    user_info = get_user_info(user_id)
    if user_info["is_approved"] is None or user_info["is_approved"] == "":
        update_is_approved(user_id, True)

    month_list = [
        "—è–Ω–≤–∞—Ä—å", "—Ñ–µ–≤—Ä–∞–ª—å", "–º–∞—Ä—Ç", "–∞–ø—Ä–µ–ª—å", "–º–∞–π", "–∏—é–Ω—å",
        "–∏—é–ª—å", "–∞–≤–≥—É—Å—Ç", "—Å–µ–Ω—Ç—è–±—Ä—å", "–æ–∫—Ç—è–±—Ä—å", "–Ω–æ—è–±—Ä—å", "–¥–µ–∫–∞–±—Ä—å"
    ]

    now = datetime.now(tz=tz_moscow)
    today_day, today_month = now.day, now.month

    formatted_date = format_date(day, month, year)

    # --- –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ ---
    if month == today_month:
        if day == today_day:
            message_to_user = f"üéâ –£—Ö —Ç—ã, —Å–µ–≥–æ–¥–Ω—è –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéÇ\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è {formatted_date} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞."
        elif day > today_day:
            message_to_user = f"‚ú® –£ –≤–∞—Å —Å–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! –° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º!\n–î–∞—Ç–∞ {formatted_date} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞."
        elif today_day - day <= 14:
            message_to_user = f"üéÅ –ù–µ–¥–∞–≤–Ω–æ –±—ã–ª –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è? –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–æ—à–µ–¥—à–∏–º!\n–î–∞—Ç–∞ {formatted_date} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞."
        else:
            message_to_user = f"–°–ø–∞—Å–∏–±–æ! –ñ–¥—É —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º —Å–ª–µ–¥—É—é—â–∏–π {month_list[month - 1]}!\n–î–∞—Ç–∞ {formatted_date} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞."
    else:
        if today_month - month == 1 and day - today_day >= 17:
            message_to_user = f"üéÇ –ù–µ–¥–∞–≤–Ω–æ –±—ã–ª –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è? –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–æ—à–µ–¥—à–∏–º!\n–î–∞—Ç–∞ {formatted_date} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞."
        else:
            message_to_user = f"–°–ø–∞—Å–∏–±–æ! –ñ–¥—É —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º {month_list[month - 1]}!\n–î–∞—Ç–∞ {formatted_date} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞."

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(message_to_user, reply_markup=ReplyKeyboardRemove())

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø–∞
    user_group, user_subgroup = user_info["user_group"], user_info["user_subgroup"]
    if not user_group or not user_subgroup:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìå –£–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã", callback_data="ask_group")],
            [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_group")]
        ])
        await message.answer("–•–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã?", reply_markup=keyboard)

    # –õ–æ–≥
    msg = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {full_name} ({user_id}) —É—Å—Ç–∞–Ω–æ–≤–∏–ª –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è {day}.{month}.{year}"
    write_user_log(msg)
